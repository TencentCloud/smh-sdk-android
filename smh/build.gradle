/*
 *
 *  * Copyright (C) 2021 Tencent, Inc.
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  *      http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 */
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

def smhVersionName = "1.1.1"
def smhVersionCode = 10101

android {
    compileSdkVersion 29
    // buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode smhVersionCode
        versionName smhVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField 'String', 'CUSTOM_HOST', "\"${getCustomApiHost()}\""
    }

    buildTypes {

        debug {

            it.buildConfigField 'String', 'SMH_ID', quotWrapper(System.getenv("SMH_ID"))
            it.buildConfigField 'String', 'SMH_KEY', quotWrapper(System.getenv("SMH_KEY"))
            it.buildConfigField 'String', 'SMH_VERSION_NAME', "\"$smhVersionName\""
            it.buildConfigField 'int', 'SMH_VERSION_CODE', "$smhVersionCode"
        }

        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            it.buildConfigField 'String', 'SMH_VERSION_NAME', "\"$smhVersionName\""
            it.buildConfigField 'int', 'SMH_VERSION_CODE', "$smhVersionCode"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

//    implementation 'androidx.core:core-ktx:1.3.2'
//    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.3'

//    compile project(':foundation')
//    compile (project(configuration: 'default', path: ':cos-android'))
//    compile project(':cos-android-ktx')
//    compileOnly project(':xmlAnnoation')

    api 'com.qcloud.cos:cos-android:5.8.4'
    api ('com.qcloud.cos:cos-ktx:5.6.5'){
        exclude group: 'com.tencent.qcloud', module: 'beacon-android-release'
        exclude group: 'com.qcloud.cos', module: 'cos-android'
    }

    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.4'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'


    // compileOnly 'com.tencent.beacon:beacon-android-release:4.2.57.1'


    // testImplementation for pure JVM unit tests
    testImplementation 'junit:junit:4.13'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1"


    // androidTestImplementation for Android instrumentation tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1"

}

// 优先 系统环境变量 -> Gradle Property
def getCustomApiHost() {

    Properties localProperties = new Properties()
    if (file('local.properties').exists()) {
        localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    }

    String sysEnvCustomHost = System.getenv("CUSTOM_SMH_API_HOST")

    return  (sysEnvCustomHost != null && !sysEnvCustomHost.isEmpty())? sysEnvCustomHost:
            localProperties.hasProperty("CUSTOM_SMH_API_HOST")? localProperties.getProperty("CUSTOM_SMH_API_HOST"):
            hasProperty("CUSTOM_SMH_API_HOST")? CUSTOM_SMH_API_HOST : ""

}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from "$buildDir/dokka/javadoc"
}

task myTxxest() {

    System.out.println("sonatypeUsername " + findProperty("ossrhUsername"))
    System.out.println("sonatypePassword " + findProperty("ossrhPassword"))
}

project.extensions.add('artifactId', 'smh-android')
project.extensions.add('artifactDesc', 'the core foundation for tencent cloud sdk')
project.extensions.add('archiveFilePath', 'outputs/aar/smh-android-release.aar')

//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            release(MavenPublication) {
//                // Applies the component for the release build variant.
//                from components.release
//
//                artifact androidSourcesJar
//                artifact androidJavadocsJar
//
//                // You can then customize attributes of the publication as shown below.
//                groupId = 'com.qcloud.cos'
//                artifactId = 'smh-android'
//                version = '1.0.2'
//            }
//            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                artifact androidSourcesJar
//                artifact androidJavadocsJar
//
//                groupId = 'com.qcloud.cos'
//                artifactId = 'smh-android-debug'
//                version = '1.0.2'
//            }
//        }
//    }
//}

static String quotWrapper(key) {
    if (key == null) {
        return "\"\""
    }
    return "\"".concat(key).concat("\"")
}

// assemble 先生成 aar 包
// publishMavenAarPublicationToMavenLocal 发布到本地
// publishMavenAarPublicationToMavenRepository 发布到 mavenCentral
// apply from: '../publish.gradle'